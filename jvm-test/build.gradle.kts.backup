plugins {
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.serialization)
}

group = "dev.aurakai.auraframefx.jvmtest"
version = "1.0.0"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

kotlin {
    jvmToolchain(17)
    
    compilerOptions {
        freeCompilerArgs.addAll(
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xcontext-receivers"
        )
    }
}

dependencies {
    // Kotlin Standard Library
    implementation(libs.kotlin.stdlib.jdk8)
    implementation(libs.kotlin.reflect)
    
    // Coroutines
    implementation(libs.kotlinx.coroutines.core)
    testImplementation(libs.kotlinx.coroutines.test)
    
    // Serialization
    implementation(libs.kotlinx.serialization.json)
    
    // DateTime
    implementation(libs.kotlinx.datetime)
    
    // Logging
    implementation(libs.slf4j.api)
    runtimeOnly(libs.slf4j.simple)
    implementation(libs.timber)
    
    // Utilities
    implementation(libs.commons.io)
    implementation(libs.commons.compress)
    implementation(libs.xz)
    
    // Testing
    testImplementation(libs.junit.jupiter.api)
    testImplementation(libs.junit.jupiter.params)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly(libs.junit.platform.launcher)
    testImplementation(libs.mockk)
}

tasks.test {
    useJUnitPlatform()
    
    testLogging {
        events("passed", "skipped", "failed")
        showExceptions = true
        showCauses = true
        showStackTraces = true
    }
}

tasks.register("jvmTestModuleStatus") {
    group = "regeneration"
    description = "Check JVM test module status"
    doLast { 
        println("ðŸ§ª JVM TEST MODULE - Genesis Protocol Status: ACTIVE")
        println("   â”œâ”€â”€ Java Toolchain: ${java.toolchain.languageVersion.get()}")
        println("   â”œâ”€â”€ Kotlin: ${libs.versions.kotlin.get()}")
        println("   â””â”€â”€ JUnit Jupiter: ${libs.versions.junitJupiter.get()}")
    }
}Processing module: jvm-test
