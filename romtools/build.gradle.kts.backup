plugins {
    id("com.android.library")
    id("com.google.devtools.ksp")
    id("com.google.dagger.hilt.android")
    id("org.jetbrains.kotlin.plugin.serialization")
}
android {
    namespace = "dev.aurakai.auraframefx.romtools"
    compileSdk = 36

    defaultConfig {
        minSdk = 34
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_24
        targetCompatibility = JavaVersion.VERSION_24
        isCoreLibraryDesugaringEnabled = true
    }
    
    kotlinOptions {
        jvmTarget = "24"
        freeCompilerArgs = listOf(
            "-Xjdk-release=24",
            "-Xjsr305=strict",
            "-opt-in=kotlin.RequiresOptIn"
        )
    }
    
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
            excludes += "/META-INF/gradle/incremental.annotation.processors"
        }
    }

    val romToolsOutputDirectory: DirectoryProperty =
        project.objects.directoryProperty().convention(layout.buildDirectory.dir("rom-tools"))

    dependencies {
        api(project(":core-module"))
        implementation(project(":secure-comm"))
        implementation(libs.androidx.core.ktx)
        implementation(platform(libs.androidx.compose.bom))
        implementation(libs.bundles.compose.ui)
        implementation(libs.androidx.activity.compose)
        implementation(libs.androidx.navigation.compose)
        implementation(libs.androidx.core.ktx)
        implementation(libs.hilt.android)
        ksp(libs.hilt.compiler)
        implementation(libs.bundles.coroutines)
        implementation(libs.androidx.room.runtime)
        implementation(libs.androidx.room.ktx)
        // Room compiler temporarily disabled
        // ksp(libs.androidx.room.compiler)
        // Replace with individual Firebase dependencies

        implementation(libs.firebase.auth)
        implementation(libs.firebase.firestore)
        implementation(libs.firebase.messaging)
        implementation(libs.firebase.config)
        implementation(libs.firebase.storage)
        implementation(platform(libs.firebase.bom))
        implementation(libs.timber)
        implementation(libs.coil.compose)
        debugImplementation(libs.leakcanary.android)
        debugImplementation(libs.androidx.compose.ui.tooling)
        testImplementation(libs.mockk.android)
        androidTestImplementation(libs.mockk.android)
        testImplementation(libs.hilt.android.testing)
        androidTestImplementation(libs.hilt.android.testing)
        androidTestImplementation(platform(libs.androidx.compose.bom))
        // androidTestImplementation(libs.hilt.android.testing); kspAndroidTest(libs.hilt.compiler)
        implementation(libs.kotlin.stdlib.jdk8)
        implementation(libs.androidx.compose.material.icons.extended)
        implementation(libs.hilt.navigation.compose)
    }

// Copy task
    tasks.register<Copy>("copyRomTools") {
        from("src/main/resources")
        into(romToolsOutputDirectory)
        include("**/*.so", "**/*.bin", "**/*.img", "**/*.jar")
        includeEmptyDirs = false
        doFirst { romToolsOutputDirectory.get().asFile.mkdirs(); logger.lifecycle("üìÅ ROM tools directory: ${romToolsOutputDirectory.get().asFile}") }
        doLast { logger.lifecycle("‚úÖ ROM tools copied to: ${romToolsOutputDirectory.get().asFile}") }
    }

// Verification task
    tasks.register("verifyRomTools") {
        dependsOn("copyRomTools")
    }

    tasks.named("build") { dependsOn("verifyRomTools") }

    tasks.register("romToolsStatus") {
        group = "aegenesis"
        doLast { println("\uD83D\uDCE6 ROMTOOLS - Ready (Java 24)") }
    }
}
dependencies {
    implementation(libs.androidx.core.ktx)
}
Processing module: romtools
